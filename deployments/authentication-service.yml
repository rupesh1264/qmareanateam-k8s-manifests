#encrypt the username and passwd
#echo -n 'postgres' | base64
#echo -n 'postgrespass' | base64
#
--- 
apiVersion: v1
data: 
  password: cG9zdGdyZXNwYXNz 
  username: cG9zdGdyZXM= 
kind: Secret
metadata: 
  name: authentication-db-creds
  namespace: mi-v3-5
type: Opaque

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: authentication-service-v3-5-pvc
  namespace: mi-v3-5
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentication-service-v3-5
  namespace: mi-v3-5
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: authentication-service-v3-5
  strategy:
      type: RollingUpdate
  template:
    metadata:
      labels:
        app: authentication-service-v3-5
    spec:
      nodeSelector:
         Name: "mi-v3-5"
      volumes:
        - name: logs
          persistentVolumeClaim:
             claimName: authentication-service-v3-5-pvc
      imagePullSecrets:
        - name: regcred1
      hostAliases:
        - ip: "192.168.129.137"
          hostnames:
          - "postgres"
      containers:
        - image:  IMAGE
          name: authentication-service-v3-5
          imagePullPolicy: Always
          command: 
          - gunicorn
          - --reload 
          - --bind=0.0.0.0:9090
          - --workers=4 
          - --timeout=3600 
          - app:app
          ports:
          - name: service-port
            containerPort: 9090
          env:
            - name: "APPLICATION_HOST"
              value: "https://mi-preval.mareana.com"
            - name: "API_PG_HOST"
              value: "postgres"
            - name: "API_PG_PORT"
              value: "5432"
            - name: "API_PG_DB"
              value: "mdh"
            - name: "POSTGRES_USER"
              valueFrom:
                secretKeyRef:
                  key: username
                  name: authentication-db-creds
            - name: "POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key: password
                  name: authentication-db-creds
            - name: "LOGS"
              value: "/var/log/authentication/"
            - name: "LDSP_SERVER"
              value: "ldap-dev.mareana.com"
          volumeMounts:
            - name: logs
              mountPath: /var/log/authentication/
          resources:
            requests:
              memory: 1Gi
---
apiVersion: v1     #service is enabled which is available in cluster , not outside .  Because to discover by the depeendency pods 
kind: Service
metadata:
  name: authentication-service-v3-5
  namespace: mi-v3-5
spec:
  ports:
  - port: 9090
    targetPort: service-port
    protocol: TCP
  selector:
    app: authentication-service-v3-5
  type: ClusterIP
---
apiVersion: autoscaling/v2beta1     # kubectl api-versions  (to check the versions of api w
kind: HorizontalPodAutoscaler
metadata:
  name: authentication-service-v3-5-autoscaler
  namespace: mi-v3-5
spec:
  scaleTargetRef:
          #apiVersion: extensions/v1beta1
    apiVersion: apps/v1
    kind: Deployment
    name: authentication-service-v3-5
  minReplicas: 1
  maxReplicas: 10
  #  targetCPUUtilizationPercentage: 80
  metrics:
          #  - type: Resource
          #resource:
          # name: cpu
          #      targetAverageUtilization: 80
  - type: Resource
    resource:
      name: memory
      # targetAverageValue: 200Mi  not work, changed to below
      targetAverageUtilization: 90


